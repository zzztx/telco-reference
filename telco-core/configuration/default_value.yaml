optional_image_registry_ImageRegistryConfig:
- spec:
    httpSecret: {}
    observedConfig: {}
    operatorLogLevel: {}
    proxy: {}
    storage: {}
optional_local_storage_operator_StorageClass:
- metadata:
    name: example-storage-class
optional_local_storage_operator_StorageLV:
- metadata:
    name: local-disks
optional_local_storage_operator_StorageSubscription:
- spec:
    source: redhat-operators-disconnected
optional_ptp_config_PtpConfigDualCardGmWpc:
- spec:
    profile:
    - plugins:
        e810:
          pins: $e810_pins
    recommend:
    - match:
      - nodeLabel: "node-role.kubernetes.io/$mcp"
optional_ptp_config_PtpConfigForHA:
- spec:
    recommend:
    - match:
      - nodeLabel: "node-role.kubernetes.io/$mcp"
optional_ptp_config_PtpConfigForHAForEvent:
- spec:
    recommend:
    - match:
      - nodeLabel: "node-role.kubernetes.io/$mcp"
optional_ptp_config_PtpConfigMaster:
- spec:
    profile:
    - interface: $interface
    recommend:
    - match:
      - nodeLabel: "node-role.kubernetes.io/$mcp"
optional_ptp_config_PtpConfigMasterForEvent:
- spec:
    profile:
    - interface: $interface
    recommend:
    - match:
      - nodeLabel: "node-role.kubernetes.io/$mcp"
optional_ptp_config_PtpConfigSlave:
- spec:
    profile:
    - interface: $interface
    recommend:
    - match:
      - nodeLabel: "node-role.kubernetes.io/$mcp"
optional_ptp_config_PtpConfigSlaveCvl:
- spec:
    profile:
    - interface: $interface
    recommend:
    - match:
      - nodeLabel: "node-role.kubernetes.io/$mcp"
optional_ptp_config_PtpConfigSlaveForEvent:
- spec:
    profile:
    - interface: $interface
    recommend:
    - match:
      - nodeLabel: "node-role.kubernetes.io/$mcp"
optional_ptp_config_PtpOperatorConfig:
- spec:
    daemonNodeSelector:
      node-role.kubernetes.io/$mcp: ""
optional_ptp_config_PtpOperatorConfigForEvent:
- spec:
    daemonNodeSelector:
      node-role.kubernetes.io/$mcp: ""
    ptpEventConfig:
      transportHost: "http://ptp-event-publisher-service-NODE_NAME.openshift-ptp.svc.cluster.local:9043"
optional_sriov_fec_operator_AcceleratorsSubscription:
- spec:
    source: redhat-operators-disconnected
optional_sriov_fec_operator_SriovFecClusterConfig:
- spec:
    acceleratorSelector:
      pciAddress: {}
    drainSkip: {}
    nodeSelector: {}
    physicalFunction:
      bbDevConfig: {}
optional_storage_StorageLVMCluster:
- spec: {}
optional_storage_StorageLVMSubscription:
- spec:
    source: redhat-operators-disconnected
optional_storage_StoragePV:
- spec:
    nodeAffinity:
      required:
        nodeSelectorTerms:
        - matchExpressions:
          - key: "node-role.kubernetes.io/$mcp"
optional_storage_StoragePVC:
- spec: {}
optional_logging_ClusterLogForwarder:
- spec:
    filters: {}
    managementState: {}
    outputs:
    - name: {}
      kafka:
        url: {}
    pipelines: {}
    serviceAccount:
      name: {}
required_cluster_logging_ClusterLogForwarder:
- spec:
    filters: {}
    managementState: {}
    outputs:
    - name: {}
      kafka:
        url: {}
    pipelines: {}
    serviceAccount:
      name: {}
required_cluster_logging_ClusterLogSubscription:
- spec:
    source: redhat-operators-disconnected
required_cluster_tuning_operator_hub_DefaultCatsrc:
- metadata:
    name: {}
  spec:
    displayName: {}
    image: {}
required_cluster_tuning_operator_hub_DisconnectedICSP:
- metadata:
    name: {}
  spec:
    repositoryDigestMirrors:
    - mirrors: {}
required_lca_LcaSubscription:
- spec:
    source: {}
required_node_tuning_operator_PerformanceProfile:
- spec:
    additionalKernelArgs: {}
    cpu:
      isolated: {}
      reserved: {}
    hugepages:
      defaultHugepagesSize: {}
      pages:
      - count: {}
        node: {}
        size: {}
    machineConfigPoolSelector: {}
    nodeSelector: {}
    realTimeKernel:
      enabled: {}
required_ptp_operator_PtpSubscription:
- spec:
    source: redhat-operators-disconnected
required_sriov_operator_SriovNetwork:
- metadata:
    name: {}
  spec: {}
required_sriov_operator_SriovNetworkNodePolicy:
- metadata:
    name: $name
  spec:
    deviceType: {}
    isRdma: {}
    nicSelector: {}
    nodeSelector: {}
    numVfs: {}
    priority: {}
    resourceName: {}
required_sriov_operator_SriovOperatorConfig:
- spec:
    configDaemonNodeSelector: {}
required_sriov_operator_SriovOperatorConfigForSNO:
- spec:
    configDaemonNodeSelector: {}
required_sriov_operator_SriovSubscription:
- spec:
    source: redhat-operators-disconnected
required_storage_odf_external_01_rook_ceph_external_cluster_details:
- data:
    external_cluster_details: eyJuYW1lIjoicm9vay1jZXBoLW1vbi1lbmRwb2ludHMiLCJraW5kIjoiQ29uZmlnTWFwIiwiZGF0YSI6eyJkYXRhIjoiY2VwaHVzYTE9MS4yLjMuNDo2Nzg5IiwibWF4TW9uSWQiOiIwIiwibWFwcGluZyI6Int9In19LHsibmFtZSI6InJvb2stY2VwaC1tb24iLCJraW5kIjoiU2VjcmV0IiwiZGF0YSI6eyJhZG1pbi1zZWNyZXQiOiJhZG1pbi1zZWNyZXQiLCJmc2lkIjoiMTExMTExMTEtMTExMS0xMTExLTExMTEtMTExMTExMTExMTExIiwibW9uLXNlY3JldCI6Im1vbi1zZWNyZXQifX0seyJuYW1lIjoicm9vay1jZXBoLW9wZXJhdG9yLWNyZWRzIiwia2luZCI6IlNlY3JldCIsImRhdGEiOnsidXNlcklEIjoiY2xpZW50LmhlYWx0aGNoZWNrZXIiLCJ1c2VyS2V5IjoiYzJWamNtVjAifX0seyJuYW1lIjoibW9uaXRvcmluZy1lbmRwb2ludCIsImtpbmQiOiJDZXBoQ2x1c3RlciIsImRhdGEiOnsiTW9uaXRvcmluZ0VuZHBvaW50IjoiMS4yLjMuNCwxLjIuMy4zLDEuMi4zLjIiLCJNb25pdG9yaW5nUG9ydCI6IjkyODMifX0seyJuYW1lIjoiY2VwaC1yYmQiLCJraW5kIjoiU3RvcmFnZUNsYXNzIiwiZGF0YSI6eyJwb29sIjoib2RmX3Bvb2wifX0seyJuYW1lIjoicm9vay1jc2ktcmJkLW5vZGUiLCJraW5kIjoiU2VjcmV0IiwiZGF0YSI6eyJ1c2VySUQiOiJjc2ktcmJkLW5vZGUiLCJ1c2VyS2V5IjoiIn19LHsibmFtZSI6InJvb2stY3NpLXJiZC1wcm92aXNpb25lciIsImtpbmQiOiJTZWNyZXQiLCJkYXRhIjp7InVzZXJJRCI6ImNzaS1yYmQtcHJvdmlzaW9uZXIiLCJ1c2VyS2V5IjoiYzJWamNtVjAifX0seyJuYW1lIjoicm9vay1jc2ktY2VwaGZzLXByb3Zpc2lvbmVyIiwia2luZCI6IlNlY3JldCIsImRhdGEiOnsiYWRtaW5JRCI6ImNzaS1jZXBoZnMtcHJvdmlzaW9uZXIiLCJhZG1pbktleSI6IiJ9fSx7Im5hbWUiOiJyb29rLWNzaS1jZXBoZnMtbm9kZSIsImtpbmQiOiJTZWNyZXQiLCJkYXRhIjp7ImFkbWluSUQiOiJjc2ktY2VwaGZzLW5vZGUiLCJhZG1pbktleSI6ImMyVmpjbVYwIn19LHsibmFtZSI6ImNlcGhmcyIsImtpbmQiOiJTdG9yYWdlQ2xhc3MiLCJkYXRhIjp7ImZzTmFtZSI6ImNlcGhmcyIsInBvb2wiOiJtYW5pbGFfZGF0YSJ9fQ==
required_networking_multinetworkpolicy_multiNetworkPolicyAllowPortProtocol:
- metadata:
    annotations: {}
  spec:
    ingress: {}
    podSelector:
      matchLabels: {}
required_scheduling_nrop:
- spec:
    nodeGroups: {}
